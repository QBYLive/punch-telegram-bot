import logging
import requests
from telegram import Update
from telegram.ext import ApplicationBuilder, CommandHandler, ContextTypes
from apscheduler.schedulers.background import BackgroundScheduler

BOT_TOKEN = "7641013721:AAFmK69lAfZDDZGvEqPT3xPn0dblhBl9eZ4"
USERNAME = 7570836848  # –ó–∞–º—ñ–Ω–∏ –Ω–∞ –ø–æ—Ç—Ä—ñ–±–Ω–∏–π username
API_KEY = "qRptHWNir0haRqH5o3sVVe2XrOqtqi"
BALANCE_URL = f"https://daisysms.com/stubs/handler_api.php?api_key={API_KEY}&action=getBalance"

logging.basicConfig(level=logging.INFO)

# –û—Ç—Ä–∏–º—É—î–º–æ –±–∞–ª–∞–Ω—Å
def get_balance():
    try:
        response = requests.get(BALANCE_URL)
        if "ACCESS_BALANCE" in response.text:
            balance = response.text.split(":")[1]
            return f"üí∞ –ë–∞–ª–∞–Ω—Å –∞–∫–∞—É–Ω—Ç—É: {balance}$"
        else:
            return "‚ùå –ù–µ –≤–¥–∞–ª–æ—Å—è –æ—Ç—Ä–∏–º–∞—Ç–∏ –±–∞–ª–∞–Ω—Å. –ü–µ—Ä–µ–≤—ñ—Ä API –∫–ª—é—á."
    except Exception as e:
        return f"‚ö†Ô∏è –ü–æ–º–∏–ª–∫–∞: {e}"

# –§—É–Ω–∫—Ü—ñ—è –¥–ª—è –∞–≤—Ç–æ–ø—ñ–Ω–≥—É
def auto_ping_balance(app):
    message = get_balance()
    app.bot.send_message(chat_id=USERNAME, text=f"üìÖ –ê–≤—Ç–æ–ø–µ—Ä–µ–≤—ñ—Ä–∫–∞ –æ 10:00\n{message}")

# –ö–æ–º–∞–Ω–¥–∞ /balance
async def balance_command(update: Update, context: ContextTypes.DEFAULT_TYPE):
    message = get_balance()
    await update.message.reply_text(message)

# –û—Å–Ω–æ–≤–Ω–∞ —Ñ—É–Ω–∫—Ü—ñ—è
def main():
    app = ApplicationBuilder().token(BOT_TOKEN).build()
    app.add_handler(CommandHandler("balance", balance_command))

    # –†–æ–∑–∫–ª–∞–¥ –Ω–∞ 10:00 –∑–∞ –ö–∏—î–≤–æ–º
    scheduler = BackgroundScheduler(timezone="Europe/Kiev")
    scheduler.add_job(auto_ping_balance, trigger='cron', hour=10, minute=0, args=[app])
    scheduler.start()

    app.run_polling()

if __name__ == "__main__":
    main()
